{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction NewInput(validate) {\n  _s();\n\n  const [newEnteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIstouched] = useState(false);\n  const enterdValueIsValid = validate(newEnteredValue);\n  const hasError = !enterdValueIsValid && isTouched;\n\n  function newValueChangeHandler(event) {\n    setEnteredValue(event.target.vaule);\n  }\n\n  function inputBlurHandler() {\n    setIstouched(true);\n  }\n\n  function reset() {\n    setEnteredValue('');\n    setIstouched(false);\n  }\n\n  return {\n    value: newEnteredValue,\n    validValue: enterdValueIsValid,\n    hasError,\n    reset,\n    newValueChangeHandler,\n    inputBlurHandler\n  };\n}\n\n_s(NewInput, \"eautAIxrePa8XSYMw14BvT9Dsmc=\");\n\n_c = NewInput;\nexport default NewInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewInput\");","map":{"version":3,"sources":["C:/UdemyReact/FoodOrderAppDiff/src/hooks/input-cust.js"],"names":["React","useState","NewInput","validate","newEnteredValue","setEnteredValue","isTouched","setIstouched","enterdValueIsValid","hasError","newValueChangeHandler","event","target","vaule","inputBlurHandler","reset","value","validValue"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AACA,SAASC,QAAT,CAAkBC,QAAlB,EAA2B;AAAA;;AACvB,QAAM,CAACC,eAAD,EAAiBC,eAAjB,IAAoCJ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACK,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,KAAD,CAAzC;AAEA,QAAMO,kBAAkB,GAAGL,QAAQ,CAACC,eAAD,CAAnC;AACA,QAAMK,QAAQ,GAAI,CAACD,kBAAD,IAAuBF,SAAzC;;AAEA,WAASI,qBAAT,CAA+BC,KAA/B,EAAqC;AACjCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH;;AAED,WAASC,gBAAT,GAA2B;AACvBP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,WAASQ,KAAT,GAAgB;AACZV,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AAED,SAAQ;AACJS,IAAAA,KAAK,EAACZ,eADF;AAEJa,IAAAA,UAAU,EAACT,kBAFP;AAGJC,IAAAA,QAHI;AAIJM,IAAAA,KAJI;AAKJL,IAAAA,qBALI;AAMJI,IAAAA;AANI,GAAR;AASH;;GA7BQZ,Q;;KAAAA,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import React,{useState} from \"react\";\r\nfunction NewInput(validate){\r\n    const [newEnteredValue,setEnteredValue] = useState('');\r\n    const [isTouched,setIstouched] = useState(false);\r\n\r\n    const enterdValueIsValid = validate(newEnteredValue);\r\n    const hasError  = !enterdValueIsValid && isTouched;\r\n\r\n    function newValueChangeHandler(event){\r\n        setEnteredValue(event.target.vaule);\r\n    }\r\n\r\n    function inputBlurHandler(){\r\n        setIstouched(true);\r\n    }\r\n\r\n    function reset(){\r\n        setEnteredValue('');\r\n        setIstouched(false);\r\n    }\r\n\r\n    return ({\r\n        value:newEnteredValue,\r\n        validValue:enterdValueIsValid,\r\n        hasError,\r\n        reset,\r\n        newValueChangeHandler,\r\n        inputBlurHandler\r\n    });\r\n\r\n}\r\n\r\nexport default NewInput;"]},"metadata":{},"sourceType":"module"}