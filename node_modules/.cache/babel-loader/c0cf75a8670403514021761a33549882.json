{"ast":null,"code":"var _jsxFileName = \"C:\\\\UdemyReact\\\\FoodOrderAppDiff\\\\src\\\\components\\\\Cart\\\\CartCheckOut.js\",\n    _s = $RefreshSig$();\n\nimport Classes from './CartCheckOut.module.css';\nimport useNew from '../../hooks/input-cust';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartCheckOut(props) {\n  _s();\n\n  const {\n    value: enteredName,\n    validatea: enteredNameIsValid,\n    ErrorOccure: nameHasError,\n    NewvalueChangeHandler: newNameChangeHandler,\n    NewBlureHandler: nameblurHandler,\n    reset: inputReset\n  } = useNew(value => value.trim() !== '');\n  const {\n    value: enteredAddress,\n    validatea: enteredAddressIsValid,\n    ErrorOccure: addressHasError,\n    NewvalueChangeHandler: newaddressChangeHandler,\n    NewBlureHandler: addressblurHandler,\n    reset: addressReset\n  } = useNew(value => value.trim() !== ''); //const {value:enteredName,validatea:enteredNameIsValid,ErrorOccure:nameHasError,NewvalueChangeHandler:newNameChangeHandler,\n  // NewBlureHandler:nameblurHandler,reset:inputReset}=useNew(value=>value.trim().length === 6);     \n  //const {value:enteredName,validatea:enteredNameIsValid,ErrorOccure:nameHasError,NewvalueChangeHandler:newNameChangeHandler,\n  //   NewBlureHandler:nameblurHandler,reset:inputReset}=useNew(value=>value.trim().length === 10);     \n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid && !enteredAddressIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredAddress);\n    inputReset('');\n    addressReset('');\n  };\n\n  const name = `${Classes.control} ${nameHasError ? Classes.invalid : ''}`;\n  const addre = `${Classes.control} ${addressHasError ? Classes.invalid : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: Classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: name,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Enter your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"Text\",\n        id: \"name\",\n        onChange: newNameChangeHandler,\n        onBlur: nameblurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please Enter Valid Name! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addre,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"Text\",\n        id: \"address\",\n        onChange: newaddressChangeHandler,\n        onBlur: addressblurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), addressHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please Enter Valid address! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pincode\",\n        children: \"Pincode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"Text\",\n        id: \"pincode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"number\",\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.actions,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toCancle,\n        children: \"Cancle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartCheckOut, \"KF0OHNNHctBejHFKITgGXOmwFRM=\", false, function () {\n  return [useNew, useNew];\n});\n\n_c = CartCheckOut;\nexport default CartCheckOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartCheckOut\");","map":{"version":3,"sources":["C:/UdemyReact/FoodOrderAppDiff/src/components/Cart/CartCheckOut.js"],"names":["Classes","useNew","CartCheckOut","props","value","enteredName","validatea","enteredNameIsValid","ErrorOccure","nameHasError","NewvalueChangeHandler","newNameChangeHandler","NewBlureHandler","nameblurHandler","reset","inputReset","trim","enteredAddress","enteredAddressIsValid","addressHasError","newaddressChangeHandler","addressblurHandler","addressReset","submitHandler","event","preventDefault","console","log","name","control","invalid","addre","form","actions","toCancle"],"mappings":"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","sourcesContent":["import Classes from './CartCheckOut.module.css';\r\nimport useNew from '../../hooks/input-cust';\r\n\r\nfunction CartCheckOut(props){\r\n    const {value:enteredName,validatea:enteredNameIsValid,ErrorOccure:nameHasError,NewvalueChangeHandler:newNameChangeHandler,\r\n        NewBlureHandler:nameblurHandler,reset:inputReset}=useNew(value=>value.trim()!=='');  \r\n    const {value:enteredAddress,validatea:enteredAddressIsValid,ErrorOccure:addressHasError,NewvalueChangeHandler:newaddressChangeHandler,\r\n        NewBlureHandler:addressblurHandler,reset:addressReset}=useNew(value=>value.trim()!==''); \r\n    //const {value:enteredName,validatea:enteredNameIsValid,ErrorOccure:nameHasError,NewvalueChangeHandler:newNameChangeHandler,\r\n       // NewBlureHandler:nameblurHandler,reset:inputReset}=useNew(value=>value.trim().length === 6);     \r\n    //const {value:enteredName,validatea:enteredNameIsValid,ErrorOccure:nameHasError,NewvalueChangeHandler:newNameChangeHandler,\r\n         //   NewBlureHandler:nameblurHandler,reset:inputReset}=useNew(value=>value.trim().length === 10);     \r\n  \r\n            const submitHandler=(event)=>{\r\n        event.preventDefault();\r\n\r\n        if(!enteredNameIsValid && !enteredAddressIsValid){\r\n            return;\r\n        }\r\n        console.log(enteredName);\r\n        console.log(enteredAddress);\r\n        inputReset('');\r\n        addressReset('');\r\n    };\r\n       const name = `${Classes.control} ${nameHasError ? Classes.invalid : ''}`;\r\n       const addre = `${Classes.control} ${addressHasError ? Classes.invalid : ''}`;\r\n    return(\r\n    <form className={Classes.form} onSubmit={submitHandler}>    \r\n        <div className={name}>\r\n            <label htmlFor=\"name\">Enter your name</label>\r\n            <input type=\"Text\" id=\"name\" onChange={newNameChangeHandler} onBlur={nameblurHandler} value={enteredName}></input>\r\n        </div>\r\n        {nameHasError && <p>Please Enter Valid Name! </p>}\r\n        <div className={addre}>\r\n        <label htmlFor=\"address\">Address</label>\r\n        <input type=\"Text\" id=\"address\" onChange={newaddressChangeHandler} onBlur={addressblurHandler}></input>\r\n        </div>\r\n        {addressHasError && <p>Please Enter Valid address! </p>}\r\n        <div className={Classes.control}>\r\n        <label htmlFor=\"pincode\">Pincode</label>\r\n        <input type=\"Text\" id=\"pincode\"></input>\r\n        </div>\r\n        <div className={Classes.control}>\r\n        <label htmlFor=\"number\">Number</label>\r\n        <input type=\"number\" id=\"number\"></input>\r\n        </div>\r\n        <div className={Classes.actions}> <button>Confirm</button>\r\n        \r\n        <button type=\"button\" onClick={props.toCancle}>Cancle</button>\r\n        </div>\r\n    </form>\r\n    );\r\n}\r\n\r\nexport default CartCheckOut;"]},"metadata":{},"sourceType":"module"}